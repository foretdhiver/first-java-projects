<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.ge.dao.EmDao">
	<resultMap type="com.spring.ge.vo.EmInfoVO" id="emInfoVO">
		<result property = "emno" column = "EMNO" />
		<result property = "emname" column = "EMNAME" />
		<result property = "emid" column = "EMID" />
		<result property = "empw" column = "EMPW" />
		<result property = "emhiredate" column = "EMHIREDATE" />
		<result property = "deptcd" column = "DEPTCD" />
		<result property = "jobcd" column = "JOBCD" />
		<result property = "ememail" column = "EMEMAIL" />
		<result property = "emhp" column = "EMHP" />
		<result property = "emdino" column = "EMDINO" />
		<result property = "emexno" column = "EMEXNO" />
		<result property = "eminsertdate" column = "EMINSERTDATE" />
		<result property = "emupdatedate" column = "EMUPDATEDATE" />
		<result property = "emsign" column = "EMSIGN" />
	</resultMap>
	<resultMap type="com.spring.ge.vo.EmPrInfoVO" id="emPrInfoVO">
		<result property = "emprno" column = "EMPRNO" />
		<result property = "emno" column = "EMNO" />
		<result property = "emprsex" column = "EMPRSEX" />
		<result property = "emprbirth" column = "EMPRBIRTH" />
		<result property = "emprmarital" column = "EMPRMARITAL" />
		<result property = "emprpostno" column = "EMPRPOSTNO" />
		<result property = "empradd" column = "EMPRADD" />
		<result property = "emprdetailadd" column = "EMPRDETAILADD" />
		<result property = "empreducd" column = "EMPREDUCD" />
		<result property = "empreduname" column = "EMPREDUNAME" />
		<result property = "emprdeleteyn" column = "EMPRDELETEYN" />
		<result property = "emprinsertdate" column = "EMPRINSERTDATE" />
		<result property = "emprupdatedate" column = "EMPRUPDATEDATE" />
		<result property = "emprpic" column = "EMPRPIC" />
	</resultMap>
	<resultMap type="EmInfo" id="emLoginInfoVO">
		<result property = "emno" 		  column = "EMNO" />
		<result property = "emname" 	  column = "EMNAME" />
		<result property = "emid" 	  	  column = "EMID" />
		<result property = "empw" 	  	  column = "EMPW" />
		<result property = "emhiredate"   column = "EMHIREDATE" />
		<result property = "deptcd" 	  column = "DEPTCD" />
		<result property = "deptname" 	  column = "DEPTNAME" />
		<result property = "jobcd" 		  column = "JOBCD" />
		<result property = "jobname"      column = "JOBNAME" />
		<result property = "ememail"      column = "EMEMAIL" />
		<result property = "emhp" 		  column = "EMHP" />
		<result property = "emdino" 	  column = "EMDINO" />
		<result property = "emexno" 	  column = "EMEXNO" />
		<result property = "eminsertdate" column = "EMINSERTDATE" />
		<result property = "emupdatedate" column = "EMUPDATEDATE" />
	</resultMap>
	<resultMap type="com.spring.ge.vo.CommonVO" id="cVO">
		<result property = "cdno" column="CDNO" />
		<result property = "cdkname" column="CDKNAME" />
		<result property = "cdename" column="CDENAME" />
		<result property = "cd" column="CD" />
		<result property = "cdnote" column="CDNOTE" />
	</resultMap>
	<resultMap type="com.spring.ge.vo.CommonVO" id="emDepartmentVO">
		<result property = "deptcd" column="DEPTCD" />
		<result property = "deptname" column="DEPTNAME" />
	</resultMap>
	<resultMap type="com.spring.ge.vo.CommonVO" id="emJobVO">
		<result property = "jobcd" column="JOBCD" />
		<result property = "jobname" column="JOBNAME" />
	</resultMap>
	<resultMap type="EmInfo" id="emInfoUpdateVO">
		<result property = "emname"		  column = "EMNAME" />
		<result property = "deptcd" 	  column = "DEPTCD" />
		<result property = "jobcd" 		  column = "JOBCD" />
		<result property = "emhp" 		  column = "EMHP" />
		<result property = "emsign" 	  column = "EMSIGN" />
		<result property = "emdino" 	  column = "EMDINO" />
		<result property = "emexgn" 	  column = "EMEXNO" />
		<result property = "emupdatedate" column = "EMUPDATEDATE" />
		<result property = "emno" 		  column = "EMNO" />
	</resultMap>
	<resultMap type="empr" id="emPrInfoUpdateVO">
		<result property = "emno" 		  	column = "EMNO" />
		<result property = "emprmarital" 	column = "EMPRMARITAL" />
		<result property = "emprpostno" 	column = "EMPRPOSTNO" />
		<result property = "empradd" 		column = "EMPRADD" />
		<result property = "emprdetailadd"  column = "EMPRDETAILADD" />
		<result property = "empreducd" 		column = "EMPREDUCD" />
		<result property = "empreduname" 	column = "EMPREDUNAME" />
		<result property = "emprupdatedate" column = "EMPRUPDATEDATE" />
		<result property = "emprpic" 		column = "EMPRPIC" />
	</resultMap>
	<resultMap type="empr" id="emprDeleteVO">
		<result property = "emprdeleteyn" column = "EMPRDELETEYN" />
		<result property = "emno" 		  column = "EMNO" />
	</resultMap>
	<resultMap type="hr" id="trAllSelectVO">
		<result property = "trno" 		  column = "TRNO"/>
		<result property = "emname" 	  column = "EMNAME"/>
		<result property = "emno" 		  column = "EMNO"/>
		<result property = "deptname" 	  column = "DEPTNAME"/>
		<result property = "jobname" 	  column = "JOBNAME"/>
		<result property = "trname"		  column = "TRNAME"/>
	</resultMap>
	<resultMap type="hr" id="trDetailVO">
		<result property = "trno" 		  column = "TRNO"/>
		<result property = "emno" 		  column = "EMNO"/>
		<result property = "emname" 	  column = "EMNAME"/>
		<result property = "deptcd" 	  column = "DEPTCD"/>
		<result property = "jobcd" 		  column = "JOBCD"/>
		<result property = "trfday" 	  column = "TRFDAY"/>
		<result property = "treday" 	  column = "TREDAY"/>
		<result property = "trname"		  column = "TRNAME"/>
		<result property = "trcontent" 	  column = "TRCONTENT"/>
		<result property = "trnote" 	  column = "TRNOTE"/>
		<result property = "trinsertdate" column = "TRINSERTDATE"/>
		<result property = "trupdatedate" column = "TRUPDATEDATE"/>
	</resultMap>
	<resultMap type="EmInfo" id="emLogCtVO">
		<result property = "ctno"		  column = "CTNO"/>
		<result property = "emname"		  column = "EMNAME"/>
		<result property = "deptcd"		  column = "DEPTCD"/>
		<result property = "jobcd"		  column = "JOBCD"/>
		<result property = "ctincd"		  column = "CTINCD"/>
		<result property = "ctoutcd"	  column = "CTOUTCD"/>
		<result property = "ctintime"	  column = "CTINTIME"/>
		<result property = "ctouttime"	  column = "CTOUTTIME"/>
		<result property = "ctinsertdate"	  column = "CTINSERTDATE"/>
		<result property = "ctupdatedate"	  column = "CTUPDATEDATE"/>
		<result property = "ctnote"	  	  column = "CTNOTE"/>
	</resultMap>
	<resultMap type="hr" id="evAllSelectVO">
		<result property = "evno"		      column = "EVNO"/>
		<result property = "emno"		      column = "EMNO"/>
		<result property = "emname"		      column = "EMNAME"/>
		<result property = "deptcd"		      column = "DEPTCD"/>
		<result property = "jobcd"		      column = "JOBCD"/>
		<result property = "evalyear"		  column = "EVALYEAR"/>
		<result property = "evalgrade"		  column = "EVALGRADE"/>
		<result property = "evalnote"		  column = "EVALNOTE"/>
		<result property = "evalinsertdate"	  column = "EVINSERTDATE"/>
		<result property = "evalupdatedate"	  column = "EVUPDATEDATE"/>
	</resultMap>
	
	<!-- 로그인 -->
	<select id="emInfoList" parameterType="EmInfo" resultMap="emLoginInfoVO">
      SELECT 
	          A.EMNO,
	          A.EMNAME,
	          A.EMID,
	          A.EMPW,
	          A.EMHIREDATE,
	          A.DEPTCD,
	          B.DEPTNAME,
	          A.JOBCD,
	          C.JOBNAME,
	          A.EMEMAIL,
	          A.EMHP,
	          A.EMDINO,
	          A.EMEXNO,
	          A.EMSIGN,
	          A.EMPIC,
	          A.EMINSERTDATE,
	          A.EMUPDATEDATE
      FROM    EM_INFO A, EM_DEPARTMENT B, EM_JOB C
      WHERE   A.EMID = #{emid}
      AND     A.EMPW = #{empw}
      AND     A.DEPTCD = B.DEPTCD
      AND     A.JOBCD  = C.JOBCD
   </select>

	<!-- 코드리스트 -->
	<select id="cdList" parameterType="commonVO" resultMap="cVO">
		SELECT * FROM CODE
	</select>
	
	<!-- 채번(사번) -->
	<select id="emChaebun" parameterType="EmInfo" resultType="EmInfo">
		/* Em - emChaebun */
		SELECT
			CASE WHEN MAX(SUBSTR(EMNO,-4)) IS NULL THEN TO_CHAR(1)
			ELSE TO_CHAR(MAX(SUBSTR(EMNO,-4))+1) END EMNO
		FROM
			EM_INFO
		WHERE
			TO_CHAR(EMINSERTDATE,'YYYYMMDD') = TO_CHAR(SYSDATE,'YYYYMMDD')
	</select>
	
	<!-- 채번(순번) -->
	<select id="emPrChaebun" parameterType="empr" resultType="empr">
		/* EmPr - emPrChaebun */
		SELECT
			CASE WHEN MAX(SUBSTR(EMPRNO,-4)) IS NULL THEN TO_CHAR(1)
			ELSE TO_CHAR(MAX(SUBSTR(EMPRNO,-4))+1) END EMPRNO
		FROM
			EM_PRINFO
		WHERE
			TO_CHAR(EMPRINSERTDATE,'YYYYMMDD') = TO_CHAR(SYSDATE,'YYYYMMDD')
	</select>

	<!-- 사원 등록(EM_INFO) -->
	<insert id="emInsert" parameterType="EmInfo">
		INSERT INTO EM_INFO(
		    EMNO
		   ,EMNAME
		   ,EMID
		   ,EMPW
		   ,EMHIREDATE
		   ,DEPTCD
		   ,JOBCD
		   ,EMEMAIL
		   ,EMHP
		   ,EMDINO
		   ,EMEXNO
		   ,EMSIGN
		   ,EMPIC
		   ,EMINSERTDATE
		   ,EMUPDATEDATE
		)VALUES(
		    #{emno}
		   ,#{emname}
		   ,#{emid}
		   ,#{empw}
		   ,#{emhiredate}
		   ,#{deptcd}
		   ,#{jobcd}
		   ,#{ememail}
		   ,#{emhp}
		   ,#{emdino}
		   ,#{emexno}
		   ,#{emsign}
		   ,#{empic}
		   ,SYSDATE
		   ,SYSDATE
		)
	</insert>

	<!-- 사원 등록(EM_PRINFO) -->
	<insert id="emPrInsert" parameterType="empr">
		/* EmPr - emPrInsert */
		INSERT INTO EM_PRINFO(
			 EMPRNO
			,EMNO
			,EMPRSEX
			,EMPRBIRTH
			,EMPRMARITAL
			,EMPRPOSTNO
			,EMPRADD
			,EMPRDETAILADD
			,EMPREDUCD
			,EMPRDELETEYN
			,EMPRINSERTDATE
			,EMPRUPDATEDATE
			,EMPREDUNAME
		)VALUES(
			 #{emprno, jdbcType=VARCHAR}
			,#{emno, jdbcType=VARCHAR}
			,#{emprsex, jdbcType=VARCHAR}
			,#{emprbirth, jdbcType=VARCHAR}
			,#{emprmarital, jdbcType=VARCHAR}
			,#{emprpostno, jdbcType=VARCHAR}
			,#{empradd, jdbcType=VARCHAR}
			,#{emprdetailadd, jdbcType=VARCHAR}
			,#{empreducd, jdbcType=VARCHAR}
			,'Y'
			,SYSDATE
			,SYSDATE
			,#{empreduname, jdbcType=VARCHAR}
		)
	</insert>

	<!-- 사원 목록 -->
	<select id="emAllSelect" parameterType="com.spring.ge.vo.EmPrInfoVO" resultMap="emPrInfoVO">
		/* Em - emAllSelect */
			SELECT *
			FROM
				(
				 SELECT
					F.*
				   ,CEIL(ROW_NUMBER() OVER(ORDER BY F.DEPTCD)/#{pageSize, jdbcType=VARCHAR}) PAGENO 
				   ,COUNT(F.EMNO) OVER() AS TOTALCOUNT
				FROM
					(SELECT
						A.EMNAME    EMNAME
					   ,C.DEPTNAME  DEPTNAME
					   ,C.DEPTCD	DEPTCD
					   ,D.JOBNAME   JOBNAME
					   ,D.JOBCD		JOBCD
					   ,A.EMNO      EMNO
					FROM
						EM_INFO A
					   ,EM_PRINFO B
					   ,EM_DEPARTMENT C
					   ,EM_JOB D
					   ,(SELECT
							A.EMNAME
						   ,B.DEPTNAME
						   ,C.JOBNAME
						   ,A.EMNO
						FROM
							EM_INFO A
						   ,EM_DEPARTMENT B
						   ,EM_JOB C
						   ,EM_PRINFO D
						WHERE
							A.DEPTCD=B.DEPTCD
						AND
							A.JOBCD=C.JOBCD
						AND	
							A.EMNO=D.EMNO
						AND	
							D.EMPRDELETEYN='Y')E
					WHERE
						A.EMNO=B.EMNO
					AND
						A.DEPTCD=C.DEPTCD
					AND
						A.JOBCD=D.JOBCD
					AND
						A.EMNAME=E.EMNAME
					AND
						B.EMPRDELETEYN='Y'
					AND
						A.JOBCD!='01'
					ORDER BY A.DEPTCD)F
					)
			WHERE
				PAGENO=#{curPage, jdbcType=VARCHAR}		
	</select>

	<!-- 사원정보 상세 조회 -->
	<select id="emDetail" parameterType="com.spring.ge.vo.EmPrInfoVO" resultMap="emPrInfoVO">
		/* Em - emDetail */
			SELECT           
			    A.EMNAME            EMNAME            
			   ,C.DEPTNAME          DEPTNAME         
			   ,D.JOBNAME           JOBNAME          
			   ,A.EMNO              EMNO              
			   ,A.EMID              EMID              
			   ,A.EMHIREDATE        EMHIREDATE        
			   ,A.EMEMAIL           EMEMAIL           
			   ,A.EMHP              EMHP              
			   ,A.EMSIGN            EMSIGN
			   ,A.EMPIC           	EMPIC              
			   ,A.EMDINO            EMDINO            
			   ,A.EMEXNO            EMEXNO            
			   ,TO_CHAR(A.EMINSERTDATE, 'YYYY-MM-DD')      EMINSERTDATE      
			   ,TO_CHAR(A.EMUPDATEDATE, 'YYYY-MM-DD')      EMUPDATEDATE     
			   ,B.EMPRBIRTH         EMPRBIRTH      
			   ,B.EMPRMARITAL		EMPRMARITAL
               ,B.EMPREDUCD    		EMPREDUCD      
			   ,B.EMPRPOSTNO        EMPRPOSTNO        
			   ,B.EMPRADD     		EMPRADD   
			   ,B.EMPRDETAILADD     EMPRDETAILADD   
			   ,B.EMPREDUNAME       EMPREDUNAME      
			   ,TO_CHAR(B.EMPRINSERTDATE, 'YYYY-MM-DD')    EMPRINSERTDATE    
			   ,TO_CHAR(B.EMPRUPDATEDATE, 'YYYY-MM-DD')    EMPRUPDATEDATE 
			   ,A.DEPTCD			DEPTCD
			   ,A.JOBCD				JOBCD  
			FROM
			    EM_INFO A
			   ,EM_PRINFO B
			   ,EM_DEPARTMENT C
			   ,EM_JOB D
			   ,CODE E
			WHERE
			    A.EMNO=B.EMNO
			AND
			    A.DEPTCD=C.DEPTCD
			AND
			    A.JOBCD=D.JOBCD
			AND
			    B.EMPRMARITAL=E.CD
			AND
			    B.EMPRDELETEYN='Y'
			AND
				A.EMNO=#{emno,jdbcType=VARCHAR}
	</select>

	<!-- 사원 정보 수정(EM_INFO) -->
	<update id="emUpdate" parameterType="EmInfo">
		/* Em - emUpdate */
			UPDATE
				EM_INFO
			SET
				EMNAME=#{emname}
			   ,DEPTCD=#{deptcd}
			   ,JOBCD=#{jobcd}
			   ,EMHP=#{emhp}
			   <if test="emsign != ''">
			   ,EMSIGN=#{emsign}
			   </if>
			   <if test="empic != ''">
			   ,EMPIC=#{empic}
			   </if>
			   ,EMDINO=#{emdino}
			   ,EMEXNO=#{emexno}
			   ,EMUPDATEDATE=SYSDATE
			WHERE
				EMNO=#{emno}
	</update>
	
	<!-- 사원 상세 정보 수정(EM_PRINFO) -->
	<update id="emprUpdate" parameterType="empr">
		/* Em - emprUpdate */
		UPDATE
		    EM_PRINFO
		SET
		    EMPRMARITAL=#{emprmarital}
		   ,EMPRPOSTNO=#{emprpostno}
		   ,EMPRADD=#{empradd}
		   ,EMPRDETAILADD=#{emprdetailadd}
		   <if test="emprpic != ''">
		   ,EMPRPIC=#{emprpic}
		   </if>
		   ,EMPREDUCD=#{empreducd}
		   ,EMPREDUNAME=#{empreduname}
		   ,EMPRUPDATEDATE=SYSDATE
		WHERE
		    EMNO=#{emno}
	</update>

	<!-- 사원 삭제 (EM_PRINFO 테이블) -->
	<update id="emDelete" parameterType="com.spring.ge.vo.EmPrInfoVO">
		/* Em - emprDelete */
		UPDATE
			EM_PRINFO
		SET
			EMPRDELETEYN='N'
		WHERE
			EMNO=#{emno}
	</update>

	<!-- 사원 검색 -->
	<select id="emSearch" parameterType="com.spring.ge.vo.EmPrInfoVO" resultMap="emPrInfoVO">
		/* Em - emSearch */
		SELECT
			A.EMNAME
		   ,B.DEPTNAME
		   ,C.JOBNAME
		   ,A.EMNO
		FROM
			EM_INFO A
		   ,EM_DEPARTMENT B
		   ,EM_JOB C
		   ,EM_PRINFO D
		WHERE
			A.DEPTCD=B.DEPTCD
		AND
	    	A.JOBCD=C.JOBCD
	    AND	
	    	A.EMNO=D.EMNO
	    AND	
	    	D.EMPRDELETEYN='Y'
		<trim prefix="AND" prefixOverrides="AND">
	    	<if test="search=='emname'">
	    		<![CDATA[ emname LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%']]>
	    	</if>
	    	<if test="search=='deptname'">
	    		<![CDATA[ deptname LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%']]>
	    	</if>
	    </trim>	
	</select>

	<!-- 채번(교육) -->
	<select id="trChaebun" parameterType="hr" resultType="hr">
		/* Tr - trChaebun */
		SELECT  /*+ INDEX_DESC(SYS_C00117852) */
        NVL(MAX(SUBSTR(A.TRNO, -4)), 0) + 1  TRNO
		FROM    EM_TRAINING A
	</select>

	<!-- 교육 사항 등록 (EM_TRAINING 테이블)-->
	<insert id="trInsert" parameterType="hr">
		/* Em,Tr - trInsert */
		INSERT INTO EM_TRAINING(
		    TRNO
		   ,EMNO
		   ,EMNAME
		   ,DEPTCD
		   ,JOBCD
		   ,TRFDAY
		   ,TREDAY
		   ,TRNAME
		   ,TRCONTENT
		   ,TRNOTE
		   ,TRINSERTDATE
		   ,TRUPDATEDATE
		)VALUES(
		    #{trno, jdbcType=VARCHAR}
		   ,#{emno, jdbcType=VARCHAR}
		   ,#{emname}
		   ,#{deptcd, jdbcType=VARCHAR}
		   ,#{jobcd, jdbcType=VARCHAR}
		   ,#{trfday, jdbcType=VARCHAR}
		   ,#{treday, jdbcType=VARCHAR}
		   ,#{trname}
		   ,#{trcontent}
		   ,#{trnote}
		   ,SYSDATE
		   ,SYSDATE
		)
	</insert>

	<!-- 교육사항목록 -->
	<select id="trAllSelect" parameterType="com.spring.ge.vo.EmHrVO" resultMap="trAllSelectVO">
		/* Tr - trAllSelect */
			SELECT
			    E.TRNO      TRNO
			   ,A.EMNAME    EMNAME 
			   ,A.EMNO      EMNO
			   ,B.DEPTNAME  DEPTNAME
			   ,C.JOBNAME   JOBNAME
			   ,E.TRNAME    TRNAME
			FROM
			    EM_INFO A
			   ,EM_DEPARTMENT B
			   ,EM_JOB C
			   ,EM_PRINFO D
			   ,EM_TRAINING E
			WHERE
			    A.JOBCD=C.JOBCD
			AND
			    A.DEPTCD=B.DEPTCD
			AND
			    A.EMNO=D.EMNO
			AND
			    A.EMNO=E.EMNO
			AND
			    D.EMPRDELETEYN='Y'
			ORDER BY E.TRNO DESC
	</select>
	
	<!-- 교육사항 상세 조회 -->
	<select id="trDetail" parameterType="com.spring.ge.vo.EmHrVO" resultMap="trDetailVO">
		/* tr - trDetail */
			SELECT           
			    A.TRNO            TRNO                     
			   ,A.EMNO            EMNO          
			   ,A.EMNAME          EMNAME              
			   ,B.DEPTNAME        DEPTNAME              
			   ,C.JOBNAME         JOBNAME        
			   ,A.TRFDAY          TRFDAY  
			   ,A.TREDAY          TREDAY			   
			   ,A.TRNAME          TRNAME			   
			   ,A.TRCONTENT       TRCONTENT			   
			   ,A.TRNOTE          TRNOTE			   
			   ,A.TRINSERTDATE    TRINSERTDATE			   
			   ,A.TRUPDATEDATE    TRUPDATEDATE			   
			FROM
			    EM_TRAINING A
			   ,EM_DEPARTMENT B
			   ,EM_JOB C
			   ,EM_PRINFO D
			WHERE
			    A.DEPTCD=B.DEPTCD
			AND
			    A.JOBCD=C.JOBCD
			AND
				A.EMNO=D.EMNO    
			AND
			    D.EMPRDELETEYN='Y'
			AND
				A.TRNO=#{trno, jdbcType=VARCHAR}
	</select>

	<!-- 교육사항 업데이트(EM_TRAINING 테이블) -->
	<update id="trUpdate" parameterType="hr">
		/* Tr - trUpdate */
		UPDATE
			EM_TRAINING
		SET
		    TRFDAY=#{trfday, jdbcType=VARCHAR}
		   ,TREDAY=#{treday, jdbcType=VARCHAR}
		   ,TRNAME=#{trname, jdbcType=VARCHAR}
		   ,TRCONTENT=#{trcontent, jdbcType=VARCHAR}
		   ,TRNOTE=#{trnote, jdbcType=VARCHAR}
		   ,TRUPDATEDATE=SYSDATE
		WHERE
		    TRNO=#{trno, jdbcType=VARCHAR}
	</update>

	<!-- 채번(근태) -->
	<select id="ctChaebun" parameterType="EmInfo" resultType="EmInfo">
		/* Ct - ctChaebun */
		SELECT  /*+ INDEX_DESC(SYS_C0011787) */
        NVL(MAX(SUBSTR(A.CTNO, -4)), 0) + 1  CTNO
		FROM    EM_CLOCKTIME A
	</select>

	<!-- 근태 등록 -->
	<insert id="ctInsert" parameterType="EmInfo">
		INSERT INTO EM_CLOCKTIME(
		    CTNO
		   ,CTINSERTDATE
		   ,CTUPDATEDATE
		   ,EMNAME
		   ,DEPTCD
		   ,JOBCD
		   ,EMNO
		   ,CTINCD
		   ,CTOUTCD
		   ,CTINTIME
		   ,CTOUTTIME
		   ,CTNOTE
		)VALUES(
		    #{ctno, jdbcType=VARCHAR}
		   ,SYSDATE
		   ,SYSDATE
		   ,#{emname, jdbcType=VARCHAR}
		   ,#{deptcd, jdbcType=VARCHAR}
		   ,#{jobcd, jdbcType=VARCHAR}
		   ,#{emno, jdbcType=VARCHAR}
		   ,#{ctincd, jdbcType=VARCHAR}
		   ,#{ctoutcd, jdbcType=VARCHAR}
		   ,''
		   ,''
		   ,''
		)
	</insert>

	<!-- 출근 업데이트 -->
	<update id="ctIntimeUpdate" parameterType="EmInfo">
		UPDATE
		    EM_CLOCKTIME
		SET
		    CTINTIME=SYSDATE
		   ,CTUPDATEDATE=SYSDATE
		WHERE
		    EMNO=#{emno, jdbcType=VARCHAR}
	</update>
	
	<!-- 퇴근 업데이트 -->
	<update id="ctOuttimeUpdate" parameterType="EmInfo">
		UPDATE
		    EM_CLOCKTIME
		SET
		    CTOUTTIME=SYSDATE
		   ,CTUPDATEDATE=SYSDATE
		WHERE
		    EMNO=#{emno, jdbcType=VARCHAR}
	</update>
	
	<!-- 출/퇴 시간 보여주기 -->
	<select id="ctSelect" parameterType="EmInfo" resultType="EmInfo">
		SELECT
			A.CTNO		CTNO
	       ,A.EMNAME	EMNAME
	       ,A.DEPTCD	DEPTCD
	       ,A.JOBCD		JOBCD
	       ,A.EMNO		EMNO
	       ,A.CTINCD	CTINCD
	       ,A.CTOUTCD	CTOUTCD
	       ,TO_CHAR(A.CTINTIME, 'HH24:MI')	CTINTIME
	       ,TO_CHAR(A.CTOUTTIME, 'HH24:MI')	CTOUTTIME	
	       ,B.DEPTNAME  DEPTNAME
   		   ,C.JOBNAME   JOBNAME
   		   ,TO_CHAR(A.CTUPDATEDATE, 'YYYY-MM-DD')	CTUPDATEDATE
		FROM
	    	EM_CLOCKTIME A
	       ,EM_DEPARTMENT B
	       ,EM_JOB C
		WHERE
			A.EMNO=#{emno, jdbcType=VARCHAR}
		AND
			A.DEPTCD=B.DEPTCD
		AND
			A.JOBCD=C.JOBCD
	</select>
	
	<!-- 출근 코드 업데이트 -->
	<update id="ctUpdate" parameterType="EmInfo">
		UPDATE
		    EM_CLOCKTIME
		SET
		    CTINCD=#{ctincd, jdbcType=VARCHAR}
		WHERE
		    EMNO=#{emno, jdbcType=VARCHAR}
	</update>
	
	<!-- 퇴근 코드 업데이트 -->
	<update id="ctOutUpdate" parameterType="EmInfo">
		UPDATE
		    EM_CLOCKTIME
		SET
		    CTOUTCD=#{ctoutcd, jdbcType=VARCHAR}
		WHERE
		    EMNO=#{emno, jdbcType=VARCHAR}
	</update>
	
	<!-- 근태 목록 -->
	<select id="ctAllSelect" parameterType="EmInfo" resultType="EmInfo">
		SELECT *
		FROM
			(
			 SELECT
				E.*
			   ,CEIL(ROW_NUMBER() OVER(ORDER BY E.DEPTCD)/#{pageSize, jdbcType=VARCHAR}) PAGENO 
			   ,COUNT(E.CTNO) OVER() AS TOTALCOUNT
			 FROM
			 	(SELECT
				    A.CTNO          CTNO
				   ,A.CTINSERTDATE  CTINSERTDATE
				   ,TO_CHAR(A.CTUPDATEDATE, 'YYYY-MM-DD')  CTUPDATEDATE
				   ,A.EMNAME        EMNAME
				   ,B.DEPTNAME      DEPTNAME
				   ,B.DEPTCD		DEPTCD
				   ,C.JOBNAME       JOBNAME
				   ,A.EMNO          EMNO
				   ,A.CTINCD        CTINCD
				   ,A.CTOUTCD       CTOUTCD
				   ,TO_CHAR(A.CTINTIME, 'HH24:MI')	CTINTIME
				   ,TO_CHAR(A.CTOUTTIME, 'HH24:MI')	CTOUTTIME
				   ,A.CTNOTE        CTNOTE
				   ,D.EMPRDELETEYN  EMPRDELETEYN
				FROM
				    EM_CLOCKTIME A
				   ,EM_DEPARTMENT B
				   ,EM_JOB C
				   ,EM_PRINFO D
				WHERE
				    A.DEPTCD=B.DEPTCD
				AND
				    A.JOBCD=C.JOBCD
				AND
				    A.EMNO=D.EMNO
				AND
				    D.EMPRDELETEYN='Y'
				ORDER BY A.DEPTCD)E
				)
		WHERE
			PAGENO=#{curPage, jdbcType=VARCHAR}	
	</select>
	
	<!-- 근태 기간 조회 -->
	<select id="ctSearch" parameterType="EmInfo" resultType="EmInfo">
		SELECT *
		FROM
			(
			 SELECT
				E.*
			   ,CEIL(ROW_NUMBER() OVER(ORDER BY E.CTINTIME, E.DEPTCD)/#{pageSize, jdbcType=VARCHAR}) PAGENO 
			   ,COUNT(E.CTNO) OVER() AS TOTALCOUNT
			 FROM
			 	(SELECT
				    A.CTNO          CTNO
				   ,A.CTINSERTDATE  CTINSERTDATE
				   ,A.EMNAME        EMNAME
				   ,A.CTUPDATEDATE	CTUPDATEDATE
				   ,B.DEPTNAME      DEPTNAME
				   ,B.DEPTCD		DEPTCD
				   ,C.JOBNAME       JOBNAME
				   ,A.EMNO          EMNO
				   ,A.CTINCD        CTINCD
				   ,A.CTOUTCD       CTOUTCD
				   ,TO_CHAR(A.CTINTIME, 'YYYY-MM-DD HH24:MI')	CTINTIME
				   ,TO_CHAR(A.CTOUTTIME, 'HH24:MI')	CTOUTTIME
				   ,A.CTNOTE        CTNOTE
				   ,D.EMPRDELETEYN  EMPRDELETEYN
				FROM
				    EM_LOGCLOCKTIME A
				   ,EM_DEPARTMENT B
				   ,EM_JOB C
				   ,EM_PRINFO D
				WHERE
				    A.DEPTCD=B.DEPTCD
				AND
				    A.JOBCD=C.JOBCD
				AND
				    A.EMNO=D.EMNO
				AND
				    D.EMPRDELETEYN='Y'
				<if test="search=='dateSearch'">
				AND	
					<![CDATA[
					A.CTINTIME>=to_date(#{ctstdate, jdbcType=VARCHAR})
					]]>
				AND
					<![CDATA[
					A.CTINTIME<=to_date(#{cteddate, jdbcType=VARCHAR})+1
					]]>
				</if>	
				ORDER BY A.CTINTIME, A.DEPTCD)E
				)
		WHERE
			PAGENO=#{curPage, jdbcType=VARCHAR}
	</select>
	
	<!-- 채번(로그 테이블) -->
	<select id="logChaebun" parameterType="EmInfo" resultType="EmInfo">
		SELECT
			CASE WHEN MAX(SUBSTR(LOGNO,-4)) IS NULL THEN TO_CHAR(1)
			ELSE TO_CHAR(MAX(SUBSTR(LOGNO,-4))+1) END LOGNO FROM EM_LOGCLOCKTIME
		WHERE
			TO_CHAR(CTUPDATEDATE,'YYYYMMDD') = TO_CHAR(SYSDATE,'YYYYMMDD')
	</select>
	
	<!-- 근태 자료 로그 테이블로 이동 -->
	<insert id="ctToLog" >
		INSERT INTO EM_LOGCLOCKTIME (
			LOGNO
		   ,CTNO
		   ,CTINSERTDATE
		   ,CTUPDATEDATE
           ,EMNAME
           ,DEPTCD
           ,JOBCD
           ,EMNO
           ,CTINCD
           ,CTOUTCD
           ,CTINTIME
           ,CTOUTTIME
           ,CTNOTE)        
		SELECT
		    ('LOG'||to_char(sysdate,'YYYYMMDD')||ROWNUM)
		   ,CTNO
		   ,CTINSERTDATE
		   ,CTUPDATEDATE
		   ,EMNAME
		   ,DEPTCD
		   ,JOBCD
		   ,EMNO
		   ,CTINCD
		   ,CTOUTCD
		   ,CTINTIME
		   ,CTOUTTIME
		   ,CTNOTE
		FROM EM_CLOCKTIME
	</insert>
	
	<!-- 전 사원 결근으로 업데이트 -->
	<update id="ctNextDay" parameterType="EmInfo">
		UPDATE
		    EM_CLOCKTIME
		SET
		    CTINCD='58'
		   ,CTOUTCD='58'
		   ,CTUPDATEDATE=SYSDATE
		   ,CTINTIME=SYSDATE
		   ,CTOUTTIME=SYSDATE
		   ,CTNOTE=''
	</update>
	
	<!-- 관리자 근태 조정 -->
	<update id="ctAdminUpdate" parameterType="EmInfo">
		UPDATE
		    EM_CLOCKTIME
		SET
		    CTINCD=#{ctincd, jdbcType=VARCHAR}
		   ,CTOUTCD=#{ctoutcd, jdbcType=VARCHAR}
		   ,CTUPDATEDATE=SYSDATE
		   ,CTNOTE=#{ctnote, jdbcType=VARCHAR}
		WHERE
			EMNO=#{emno, jdbcType=VARCHAR}   
	</update>
	
	<!-- 마이페이지 조회 (개인정보) -->
	<select id="myPageInfo" parameterType="com.spring.ge.vo.EmPrInfoVO" resultMap="emPrInfoVO">
		SELECT           
		    A.EMNAME            EMNAME            
		   ,C.DEPTNAME          DEPTNAME         
		   ,D.JOBNAME           JOBNAME          
		   ,A.EMNO              EMNO              
		   ,A.EMID              EMID     
		   ,A.EMPW              EMPW
		   ,A.EMHIREDATE        EMHIREDATE        
		   ,A.EMEMAIL           EMEMAIL           
		   ,A.EMHP              EMHP              
		   ,A.EMSIGN            EMSIGN              
		   ,A.EMDINO            EMDINO            
		   ,A.EMEXNO            EMEXNO                 
		   ,B.EMPRBIRTH         EMPRBIRTH      
		   ,B.EMPRMARITAL		EMPRMARITAL
		   ,B.EMPREDUCD    		EMPREDUCD      
		   ,B.EMPRPOSTNO        EMPRPOSTNO        
		   ,B.EMPRADD     		EMPRADD   
		   ,B.EMPRDETAILADD     EMPRDETAILADD   
		   ,B.EMPRPIC           EMPRPIC          
		   ,B.EMPREDUNAME       EMPREDUNAME      
		   ,A.DEPTCD			DEPTCD
		   ,A.JOBCD				JOBCD  
		FROM
		    EM_INFO A
		   ,EM_PRINFO B
		   ,EM_DEPARTMENT C
		   ,EM_JOB D
		   ,CODE E
		WHERE
		    A.EMNO=B.EMNO
		AND
		    A.DEPTCD=C.DEPTCD
		AND
		    A.JOBCD=D.JOBCD
		AND
		    B.EMPRMARITAL=E.CD
		AND
		    B.EMPRDELETEYN='Y'
		AND
		    A.EMNO=#{emno, jdbcType=VARCHAR}
	</select>

	<!-- 비밀번호 수정 -->
	<update id="pwUpdate" parameterType="EmInfo">
		UPDATE
		    EM_INFO
		SET
		    EMPW=#{empw, jdbcType=VARCHAR}
		WHERE
		    EMNO=#{emno, jdbcType=VARCHAR}
	</update>
	
	<!-- 마이페이지 교육목록 -->
	<select id="myPageTr" parameterType="hr" resultMap="trDetailVO">
		SELECT
		    D.TRNO      TRNO
		   ,A.EMNAME    EMNAME 
		   ,A.EMNO      EMNO
		   ,B.DEPTNAME  DEPTNAME
		   ,C.JOBNAME   JOBNAME
		   ,D.TRNAME    TRNAME
		FROM
		    EM_INFO A
		   ,EM_DEPARTMENT B
		   ,EM_JOB C
		   ,EM_TRAINING D
		WHERE
		    A.JOBCD=C.JOBCD
		AND
		    A.DEPTCD=B.DEPTCD
		AND
		    A.EMNO=D.EMNO
		AND
		    A.EMNO=#{emno, jdbcType=VARCHAR}
		ORDER BY D.TRNO DESC
	</select>

	<!-- 마이페이지 교육상세 -->
	<select id="myPageTrDetail" parameterType="hr" resultMap="trDetailVO">
		SELECT           
		    A.TRNO            TRNO                     
		   ,A.EMNO            EMNO          
		   ,A.EMNAME          EMNAME              
		   ,B.DEPTNAME        DEPTNAME              
		   ,C.JOBNAME         JOBNAME        
		   ,A.TRFDAY          TRFDAY  
		   ,A.TREDAY          TREDAY			   
		   ,A.TRNAME          TRNAME			   
		   ,A.TRCONTENT       TRCONTENT			   			   		   
		FROM
		    EM_TRAINING A
		   ,EM_DEPARTMENT B
		   ,EM_JOB C
		WHERE
		    A.DEPTCD=B.DEPTCD
		AND
		    A.JOBCD=C.JOBCD
		AND
		    A.TRNO=#{trno, jdbcType=VARCHAR}
	</select>

	<!-- 채번(평가) -->
	<select id="evChaebun" parameterType="hr" resultType="hr">
		/* Em - evChaebun */
		SELECT  /*+ INDEX_DESC(SYS_C0012119) */
        NVL(MAX(SUBSTR(A.EVNO, -4)), 0) + 1  EVNO
		FROM    EM_EVALUATION A
	</select>

	<!-- 평가 등록 (EM_EVALUATION 테이블)-->
	<insert id="evInsert" parameterType="hr">
		INSERT INTO EM_EVALUATION(
		    EVNO
		   ,EMNO
		   ,EMNAME
		   ,DEPTCD
		   ,JOBCD
		   ,EVALYEAR
		   ,EVALGRADE
		   ,EVALNOTE
		   ,EVINSERTDATE
		   ,EVUPDATEDATE
		)VALUES(
		    #{evno, jdbcType=VARCHAR}
		   ,#{emno, jdbcType=VARCHAR}
		   ,#{emname, jdbcType=VARCHAR}
		   ,#{deptcd, jdbcType=VARCHAR}
		   ,#{jobcd, jdbcType=VARCHAR}
		   ,#{evalyear, jdbcType=VARCHAR}
		   ,#{evalgrade, jdbcType=VARCHAR}
		   ,#{evalnote, jdbcType=VARCHAR}
		   ,SYSDATE
		   ,SYSDATE
		)
	</insert>

	<!-- 평가 목록(전체) -->
	<select id="evAllSelect" parameterType="hr" resultMap="evAllSelectVO">
		SELECT
		    A.EVNO  EVNO
		   ,A.EMNO  EMNO
		   ,A.EMNAME    EMNAME
		   ,B.DEPTNAME  DEPTNAME
		   ,C.JOBNAME   JOBNAME
		   ,A.DEPTCD    DEPTCD
		   ,A.JOBCD     JOBCD
		   ,A.EVALYEAR  EVALYEAR
		FROM
		    EM_EVALUATION A
		   ,EM_DEPARTMENT B
		   ,EM_JOB C
		   ,EM_PRINFO D
		WHERE
		    A.DEPTCD = B.DEPTCD
		AND
		    A.JOBCD = C.JOBCD
		AND
		    A.EMNO = D.EMNO
		AND
		    D.EMPRDELETEYN='Y'
		ORDER BY EVNO DESC
	</select>

	<!-- 퇴근 누르면 로그 테이블로 인서트 -->
	<insert id="goToLog">
		INSERT INTO EM_LOGCLOCKTIME (
		    LOGNO
		   ,CTNO
		   ,CTINSERTDATE
		   ,CTUPDATEDATE
		   ,EMNAME
		   ,DEPTCD
		   ,JOBCD
		   ,EMNO
		   ,CTINCD
		   ,CTOUTCD
		   ,CTINTIME
		   ,CTOUTTIME
		   ,CTNOTE)        
		SELECT
		   ('LOG'||to_char(sysdate,'YYYYMMDD')||SUBSTR(CTNO ,-4,4))
		   ,CTNO
		   ,CTINSERTDATE
		   ,CTUPDATEDATE
		   ,EMNAME
		   ,DEPTCD
		   ,JOBCD
		   ,EMNO
		   ,CTINCD
		   ,CTOUTCD
		   ,CTINTIME
		   ,CTOUTTIME
		   ,CTNOTE
		FROM EM_CLOCKTIME
		WHERE EMNO=#{emno, jdbcType=VARCHAR}
	</insert>

	<!-- 평가 상세 조회 -->
	<select id="evDetail" parameterType="hr" resultMap="evAllSelectVO">
		SELECT
		    A.EVNO  EVNO
		   ,A.EMNO  EMNO
		   ,A.EMNAME    EMNAME
		   ,B.DEPTNAME  DEPTNAME
		   ,C.JOBNAME   JOBNAME
		   ,A.DEPTCD    DEPTCD
		   ,A.JOBCD     JOBCD
		   ,A.EVALYEAR  EVALYEAR
		   ,A.EVALGRADE EVALGRADE
		   ,A.EVALNOTE  EVALNOTE
		FROM
		    EM_EVALUATION A
		   ,EM_DEPARTMENT B
		   ,EM_JOB C
		WHERE
		    A.DEPTCD = B.DEPTCD
		AND
		    A.JOBCD = C.JOBCD
		AND
		    A.EVNO=#{evno, jdbcType=VARCHAR}
	</select>
	
	<!-- 평가 수정 -->
	<update id="evUpdate" parameterType="hr">
		UPDATE
		    EM_EVALUATION
		SET
		    EVALYEAR=#{evalyear, jdbcType=VARCHAR}
		   ,EVALGRADE=#{evalgrade, jdbcType=VARCHAR}
		   ,EVALNOTE=#{evalnote, jdbcType=VARCHAR}
		   ,EVUPDATEDATE=SYSDATE
		WHERE
		    EVNO=#{evno, jdbcType=VARCHAR}
	</update>
</mapper>